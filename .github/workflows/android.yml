name: Build APK
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache buildozer global directory
        uses: actions/cache@v3
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}
          
      - name: Cache buildozer directory
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: buildozer-${{ hashFiles('buildozer.spec') }}
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-dev \
            build-essential \
            libssl-dev \
            libffi-dev \
            libsqlite3-dev \
            libbz2-dev \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            liblzma-dev \
            git \
            unzip \
            openjdk-17-jdk \
            autoconf \
            libtool \
            pkg-config \
            cmake
            
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install buildozer cython==0.29.33
          
      - name: Setup Android SDK manually
        run: |
          # Create Android SDK directory
          export ANDROID_HOME="$HOME/android-sdk"
          export ANDROID_SDK_ROOT="$ANDROID_HOME"
          mkdir -p "$ANDROID_HOME"
          
          # Download and setup command line tools
          cd "$ANDROID_HOME"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip -q commandlinetools-linux-10406996_latest.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true
          rmdir cmdline-tools/cmdline-tools 2>/dev/null || true
          
          # Set environment variables for this session and future steps
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/tools/bin" >> $GITHUB_PATH
          
          # Accept licenses
          yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --licenses || true
          
          # Install required packages
          "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --install \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.0" \
            "ndk;25.1.8937393"
            
      - name: Create custom buildozer.spec with fixed paths
        run: |
          # Backup original
          cp buildozer.spec buildozer.spec.bak
          
          # Create new buildozer.spec with explicit Android paths
          cat > buildozer.spec << 'EOF'
          [app]
          title = Game SoundTracks
          package.name = gsd
          package.domain = com.gsd.local
          version = 0.1.0
          entrypoint = main.py
          source.dir = .
          source.include_exts = py,html,js,css,png,jpg,jpeg,svg,ico
          
          requirements = python3,kivy,flask,requests,beautifulsoup4,urllib3,certifi,chardet,idna
          garden_requirements = androidx_webview
          
          android.permissions = INTERNET,ACCESS_NETWORK_STATE,READ_EXTERNAL_STORAGE,WRITE_EXTERNAL_STORAGE
          android.permissions += READ_MEDIA_AUDIO
          android.allow_cleartext = 1
          
          android.api = 33
          android.minapi = 21
          android.ndk_api = 21
          
          android.sdk_path = ANDROID_SDK_PATH_PLACEHOLDER
          android.ndk_path = ANDROID_NDK_PATH_PLACEHOLDER
          
          [buildozer]
          log_level = 2
          EOF
          
          # Replace placeholders with actual paths
          sed -i "s|ANDROID_SDK_PATH_PLACEHOLDER|$ANDROID_HOME|g" buildozer.spec
          sed -i "s|ANDROID_NDK_PATH_PLACEHOLDER|$ANDROID_HOME/ndk/25.1.8937393|g" buildozer.spec
          
          echo "=== Updated buildozer.spec ==="
          cat buildozer.spec
          
      - name: Verify Android environment
        run: |
          echo "=== Environment Variables ==="
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "JAVA_HOME: $JAVA_HOME"
          echo ""
          echo "=== PATH ==="
          echo "$PATH"
          echo ""
          echo "=== Android SDK Structure ==="
          ls -la "$ANDROID_HOME" || echo "Android home not found"
          ls -la "$ANDROID_HOME/cmdline-tools/latest/bin/" || echo "cmdline-tools not found"
          echo ""
          echo "=== SDK Manager Test ==="
          which sdkmanager || echo "sdkmanager not in PATH"
          "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --list --compact 2>/dev/null | head -10 || echo "sdkmanager failed"
          
      - name: Initialize buildozer
        run: |
          # Set explicit environment variables
          export ANDROID_HOME="$HOME/android-sdk"
          export ANDROID_SDK_ROOT="$ANDROID_HOME"
          export ANDROID_NDK_HOME="$ANDROID_HOME/ndk/25.1.8937393"
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools/bin:$PATH"
          
          # Clean any existing buildozer state
          buildozer android clean || true
          
      - name: Build APK
        run: |
          # Set all required environment variables
          export ANDROID_HOME="$HOME/android-sdk"
          export ANDROID_SDK_ROOT="$ANDROID_HOME"
          export ANDROID_NDK_HOME="$ANDROID_HOME/ndk/25.1.8937393"
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools/bin:$PATH"
          
          # Additional Java setup for sdkmanager
          export _JAVA_OPTIONS="-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
          
          echo "=== Final Environment Check ==="
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          
          # Verify critical files exist
          ls -la "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" || echo "sdkmanager missing"
          ls -la "$ANDROID_HOME/ndk/25.1.8937393" || echo "NDK missing"
          
          # Build with verbose output
          buildozer android debug --verbose
          
      - name: Find and list APK files
        run: |
          echo "=== Searching for APK files ==="
          find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
          
          echo "=== bin directory ==="
          ls -la bin/ 2>/dev/null || echo "bin directory not found"
          
          echo "=== .buildozer structure ==="
          find .buildozer -name "*.apk" -type f 2>/dev/null || echo "No APK in .buildozer"
          
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: game-soundtrack-downloader-apk
          path: |
            ./bin/*.apk
            ./.buildozer/android/platform/build-*/bin/*.apk
            ./.buildozer/android/platform/build-*/dist/*.apk
          if-no-files-found: warn
